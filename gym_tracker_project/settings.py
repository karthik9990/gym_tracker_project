"""
Django settings for gym_tracker_project project.

Generated by 'django-admin startproject' using Django 5.2.

For more information on this file, see
https://docs.djangoproject.com/en/5.2/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/5.2/ref/settings/
"""

from pathlib import Path
import os


# gym_tracker_project/settings.py




# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent

# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/5.2/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = 'django-insecure-m4ase!_7(39gz_ya32g#9*e3o&5hu!oxj@+@x=5*@i$yg(jbg!'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = []

# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'workouts',
    'pwa',
]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'workouts.middleware.TimezoneMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

ROOT_URLCONF = 'gym_tracker_project.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [BASE_DIR / 'templates'],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'gym_tracker_project.wsgi.application'

# Database
# https://docs.djangoproject.com/en/5.2/ref/settings/#databases

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.sqlite3',
        'NAME': BASE_DIR / 'db.sqlite3',
    }
}

# Password validation
# https://docs.djangoproject.com/en/5.2/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]

# Internationalization
# https://docs.djangoproject.com/en/5.2/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'America/Regina'

USE_I18N = True

USE_TZ = True

# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/5.2/howto/static-files/

STATIC_URL = '/static/'

STATICFILES_DIRS = [
    os.path.join(BASE_DIR, 'static'), # Path to the project-wide static directory
]

STATIC_ROOT = os.path.join(BASE_DIR, 'staticfiles')

# Default primary key field type
# https://docs.djangoproject.com/en/5.2/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'

# gym_tracker_project/settings.py (at the bottom)
LOGIN_REDIRECT_URL = '/workouts/'  # Redirect to the log page after login
LOGOUT_REDIRECT_URL = '/'  # Redirect to home page (or login page) after logout

# --- PWA Configuration ---

# Define the path where your static files are collected in production
# Adjust 'static/' if your STATIC_ROOT or STATICFILES_DIRS are different
# This example assumes icons are in 'static/images/icons/' relative to BASE_DIR
# Or adjust based on your STATICFILES_DIRS setup.
# If using STATIC_ROOT, ensure icons are placed so collectstatic copies them correctly.
PWA_APP_BASE_DIR = BASE_DIR # Or wherever your manage.py is

PWA_APP_NAME = 'Gym Tracker' # Your app's public name
PWA_APP_DESCRIPTION = "Your personal workout logging application."
PWA_APP_THEME_COLOR = '#0d6efd' # Example: Bootstrap primary blue
PWA_APP_BACKGROUND_COLOR = '#ffffff' # White background
PWA_APP_DISPLAY = 'standalone' # How the app should look (standalone, fullscreen, minimal-ui)
PWA_APP_SCOPE = '/' # The scope of URLs the PWA controls (usually root)
PWA_APP_ORIENTATION = 'any' # portrait, landscape, any
PWA_APP_START_URL = '/' # The URL loaded when the PWA is launched from the icon
PWA_APP_FETCH_URL = PWA_APP_START_URL # Often same as START_URL
# Optional: Versioning - useful for cache busting on updates
PWA_APP_VERSION = '1.0.0' # Increment this when you make significant changes

# Icons: Provide paths relative to your STATICFILES_DIRS or where collectstatic finds them
# You MUST create these icon files and place them in your static files directory.
# Common sizes: 192x192 (required), 512x512 (recommended for splash screens)
# Ensure these paths are correct relative to how your static files are served.
# Example assumes you have a 'static/images/icons/' folder in your project root
# or within an app that's configured in STATICFILES_DIRS.
PWA_APP_ICONS = [
    {
        'src': '/static/images/icons/icon-192x192.png', # Adjust path as needed!
        'sizes': '192x192'
    },
    {
        'src': '/static/images/icons/icon-512x512.png', # Adjust path as needed!
        'sizes': '512x512'
    }
]
PWA_APP_ICONS_APPLE = [ # Icons for iOS 'Add to Home Screen'
    {
        'src': '/static/images/icons/icon-apple-180x180.png', # Adjust path as needed!
        'sizes': '180x180'
    }
]

# Splash Screen (Optional but recommended for better UX)
# PWA_APP_SPLASH_SCREEN = [
#    {
#        'src': '/static/images/splash/splash-screen.png', # Adjust path!
#        'media': '(device-width: 320px) and (device-height: 568px) and (-webkit-device-pixel-ratio: 2)'
#    }
# ]

# Service Worker Path
# Tells django-pwa where to find the generated Service Worker file.
# This path is usually relative to the STATIC_ROOT in production after collectstatic.
# If using runserver, it finds it relative to BASE_DIR/static usually.
PWA_SERVICE_WORKER_PATH = os.path.join(PWA_APP_BASE_DIR, 'static', 'serviceworker.js')

# --- End PWA Configuration ---
